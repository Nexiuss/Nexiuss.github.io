<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cache on Nexius</title>
    <link>https://nexiuss.github.io/tags/cache/</link>
    <description>Recent content in Cache on Nexius</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 11 Jul 2025 11:01:17 +0800</lastBuildDate>
    <atom:link href="https://nexiuss.github.io/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring缓存</title>
      <link>https://nexiuss.github.io/posts/spring%E7%BC%93%E5%AD%98/</link>
      <pubDate>Fri, 11 Jul 2025 11:01:17 +0800</pubDate>
      <guid>https://nexiuss.github.io/posts/spring%E7%BC%93%E5%AD%98/</guid>
      <description>&lt;h1 id=&#34;spring缓存&#34;&gt;Spring缓存&lt;/h1&gt;&#xA;&lt;h3 id=&#34;spring缓存介绍&#34;&gt;Spring缓存介绍&lt;/h3&gt;&#xA;&lt;p&gt;@Cacheable 是 Spring Framework 提供的一个注解，用于方法级别的缓存管理。当一个被标注为 @Cacheable 的方法被调用时，它会先检查缓存中是否有对应的结果。如果有，则直接返回缓存结果，而不会执行方法逻辑。如果没有，则执行方法逻辑并将结果存入缓存，以便下次调用时直接使用缓存值。&lt;/p&gt;&#xA;&lt;h3 id=&#34;作用&#34;&gt;作用&lt;/h3&gt;&#xA;&lt;p&gt;@Cacheable 注解的作用是将方法的返回值缓存起来，以提高系统的性能。当一个方法被多次调用时，如果缓存中已经存在该方法的返回值，则可以直接从缓存中获取，而不需要再次执行方法逻辑。这样可以避免重复计算，提高系统的响应速度。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;提升性能：避免重复调用耗时的计算或 I/O 操作（如数据库查询或远程调用）。&lt;/li&gt;&#xA;&lt;li&gt;减少资源消耗：减少系统对外部依赖（如数据库、API）的访问频率。&lt;/li&gt;&#xA;&lt;li&gt;简单易用：通过注解配置，无需显式管理缓存逻辑。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;使用场景&#34;&gt;使用场景&lt;/h3&gt;&#xA;&lt;p&gt;@Cacheable 注解适用于以下场景：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;数据库查询：对于频繁查询的数据，可以使用 @Cacheable 注解将查询结果缓存起来，避免重复查询数据库。&lt;/li&gt;&#xA;&lt;li&gt;计算密集型任务：对于计算密集型任务，可以使用 @Cacheable 注解将计算结果缓存起来，避免重复计算。&lt;/li&gt;&#xA;&lt;li&gt;外部服务调用：对于外部服务调用，可以使用 @Cacheable 注解将调用结果缓存起来，避免重复调用外部服务。&lt;/li&gt;&#xA;&lt;li&gt;高并发场景：对于高并发场景，可以使用 @Cacheable 注解将热点数据缓存起来，避免热点数据的频繁访问。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;heading&#34;&gt;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@Cacheable(&#xA;    cacheNames = ..., // 缓存的名字（可理解为缓存的分类）&#xA;    key = ...,        // 缓存的键（默认使用方法参数作为键）&#xA;    unless = ...,     // 条件表达式，返回 true 时不会缓存&#xA;    condition = ...   // 条件表达式，返回 true 时才缓存&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;caffeine-本地缓存&#34;&gt;Caffeine 本地缓存&lt;/h3&gt;&#xA;&lt;p&gt;Caffeine 是一个高性能、本地缓存库，提供类似于 Guava Cache 的功能，并且性能更优&lt;/p&gt;&#xA;&lt;h3 id=&#34;二级缓存&#34;&gt;二级缓存&lt;/h3&gt;&#xA;&lt;p&gt;先查本地Caffeine缓存，未命中再查Redis缓存，最后才查数据库。缓存更新时会同时更新两级缓存。可以根据实际需求调整缓存过期时间和大小等参数。&lt;/p&gt;&#xA;&lt;h3 id=&#34;代码&#34;&gt;代码&lt;/h3&gt;&#xA;&lt;p&gt;pom.xml&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Spring Boot Starter --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Caffeine 缓存 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.github.ben-manes.caffeine&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;caffeine&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.1.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Redis --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CacheConfig.java&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
